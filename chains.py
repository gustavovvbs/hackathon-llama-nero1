from langchain_groq import ChatGroq
from dotenv import load_dotenv
import os

from langchain_core.prompts import PromptTemplate, ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_core.runnables import RunnablePassthrough
from operator import itemgetter

load_dotenv()

GROQ_API_KEY = os.getenv("GROQ_API_KEY")

template_agregador = """
Voc√™ √© um especialista em an√°lise financeira acess√≠vel. Com base nas transa√ß√µes fornecidas, sua tarefa √©:

1. **Calcular o total gasto em cada categoria**, utilizando emojis para representar cada uma delas e explicando de forma clara e visual.
   - ü•ó **Alimenta√ß√£o**: R$ valor
   - üöó **Transporte**: R$ valor
   - üè† **Moradia**: R$ valor
   - üéâ **Lazer**: R$ valor
   - ... *(adicione outras categorias conforme necess√°rio)*

2. **Destacar as maiores despesas individuais** e em quais categorias elas se concentram, utilizando gr√°ficos simples ou representa√ß√µes visuais.
3. **Apresentar m√©dias de gastos di√°rias, semanais e mensais** de maneira simples e direta.
4. **Identificar per√≠odos de maior gasto** e ajudar o usu√°rio a entender esses picos com exemplos concretos.
5. **Destacar h√°bitos financeiros positivos** que o usu√°rio pode manter para melhorar sua sa√∫de financeira.

Mantenha o tom leve e educativo, ajudando o usu√°rio a se sentir no controle de suas finan√ßas.

**Dados das transa√ß√µes:**
{transacoes}
"""

template_padroes = """
Como especialista em an√°lise financeira, ajude o usu√°rio a identificar seus h√°bitos financeiros ao:

1. **Descobrir padr√µes de gastos recorrentes**, utilizando emojis para cada categoria e explica√ß√µes claras.
2. **Entender ciclos de despesas**, como aumentos no in√≠cio ou fim do m√™s, destacando com gr√°ficos ou √≠cones.
3. **Apontar categorias com tend√™ncias de aumento nos gastos** e que precisam de aten√ß√£o, utilizando cores ou sinais de alerta.
4. **Mostrar como diferentes categorias de despesas est√£o conectadas**, usando diagramas simples ou fluxogramas.

Apresente as informa√ß√µes de forma clara e educativa para que o usu√°rio veja valor em sua an√°lise.

**Dados agregados:**
{dados_agregados}

"""

template_tendencias = """
Voc√™ √© um especialista em proje√ß√µes financeiras. Ajude o usu√°rio a planejar melhor seus gastos ao:

1. **Estimar gastos futuros em categorias importantes**, representadas por emojis para facilitar a visualiza√ß√£o.
2. **Identificar tend√™ncias de aumento ou redu√ß√£o em despesas** e explicar de forma acess√≠vel com gr√°ficos de linha ou barras.
3. **Comparar os h√°bitos do usu√°rio com padr√µes saud√°veis** e dar contexto utilizando benchmarks ou m√©dias de mercado.
4. **Avaliar se os gastos s√£o sustent√°veis** ou precisam de ajustes, destacando com √≠cones de sem√°foro (verde, amarelo, vermelho).

Use um tom claro e motivador, ajudando o usu√°rio a visualizar um caminho financeiro positivo.

**Dados de padr√µes:**
{padroes}

"""


template_insights = """
Como consultor financeiro, gere insights claros e acion√°veis com base nos dados do usu√°rio:

1. **√Åreas onde √© poss√≠vel economizar de forma pr√°tica**, destacadas com emojis e sugest√µes espec√≠ficas.
2. **Comportamentos financeiros positivos** que o usu√°rio deve manter, utilizando √≠cones de medalha ou estrelas.
3. **H√°bitos que precisam de ajustes** com explica√ß√µes claras e exemplos de como melhorar.
4. **Compara√ß√£o com metas financeiras** para motivar o usu√°rio a melhorar, mostrando progresso com barras de progresso ou gr√°ficos.

Apresente os insights de forma acess√≠vel e motivadora, sugerindo passos concretos para o usu√°rio.

**Tend√™ncias:**
{dados_completos}
"""

template_recomendacoes = """
Como consultor financeiro pessoal, ofere√ßa recomenda√ß√µes pr√°ticas e amig√°veis com base nos insights:

1. **Sugest√µes espec√≠ficas para economizar em categorias importantes**, usando emojis para ilustrar cada recomenda√ß√£o.
2. **Alternativas vi√°veis para servi√ßos caros ou despesas desnecess√°rias**, apresentadas de forma clara e direta.
3. **Estrat√©gias simples para melhorar os h√°bitos financeiros**, com passos f√°ceis de seguir.
4. **Metas alcan√ß√°veis para o pr√≥ximo per√≠odo** com exemplos motivadores e sugest√µes de acompanhamento.

Use um tom amig√°vel, explique de forma direta e **adicione emojis** para tornar a comunica√ß√£o mais leve e engajante. üéØüí°üëç

**Insights dispon√≠veis:**
{insights}
"""

template_relatorio = """
Voc√™ √© um especialista em criar relat√≥rios financeiros claros e objetivos. Crie um relat√≥rio para o usu√°rio que inclua:

1. **Resumo dos Gastos:**
   - **N√∫meros principais e conclus√µes** apresentadas de forma simples.
   - **Gastos por categoria organizados visualmente** com emojis e gr√°ficos.
     - ü•ó **Alimenta√ß√£o**: R$ valor
     - üöó **Transporte**: R$ valor
     - üè† **Moradia**: R$ valor
     - üéâ **Lazer**: R$ valor
     - ... *(adicione outras categorias conforme necess√°rio)*
   - **Destaques de tend√™ncias de gastos** com gr√°ficos de linha ou barras.

2. **An√°lise Detalhada:**
   - **Explica√ß√£o de gastos por categorias** com exemplos claros e emojis.
   - **Tend√™ncias financeiras identificadas** utilizando gr√°ficos e √≠cones.

3. **Recomenda√ß√µes:**
   - **Sugest√µes pr√°ticas para economizar**, ilustradas com emojis e passos concretos. N√£o de sugest√µes gen√©ricas e vagas, mas sim recomenda√ß√µes espec√≠ficas e acion√°veis com base nos dados fornecidos.

N√£o fa√ßa o relat√≥rio em formato de markdown.

N√ÉO INCLUA GR√ÅFICOS OU INTEN√á√ÉO DE INCLUIR UM GR√ÅFICO.

N√ÉO FALE NADA SOBRE ENTREGAR ALGO PARA O USU√ÅRIO, J√Å QUE O USU√ÅRIO QUE IR√Å RECEBER O RELAT√ìRIO.
N√£o fa√ßa nenhum tipo de presun√ß√£o sobre o que foram os gastos, apenas forneca os dados de forma clara e objetiva, se baseando somente nos dados fornecidos. Por exemplo, n√£o diga que o usu√°rio gastou muito com educa√ß√£o por conta de cursos de especializa√ß√£o, j√° que √© imposs√≠vel saber.

Divida as se√ß√µes do relat√≥rio com os seguintes caracteres:

---------------
"""

prompt_agregador = PromptTemplate.from_template(template_agregador)
prompt_padroes = PromptTemplate.from_template(template_padroes)
prompt_tendencias = PromptTemplate.from_template(template_tendencias)
prompt_insights = PromptTemplate.from_template(template_insights)
prompt_recomendacoes = PromptTemplate.from_template(template_recomendacoes)
prompt_relatorio = PromptTemplate.from_template(template_relatorio)

llm = ChatGroq(
        api_key=GROQ_API_KEY,
        model="llama3-70b-8192"
    )

chain_agregador = prompt_agregador | llm | StrOutputParser()
chain_padroes = prompt_padroes | llm | StrOutputParser()
chain_tendencias = prompt_tendencias | llm | StrOutputParser()
chain_insights = prompt_insights | llm | StrOutputParser()
chain_recomendacoes = prompt_recomendacoes | llm | StrOutputParser()
chain_relatorio = prompt_relatorio | llm | StrOutputParser()

chain_analise_basica = {"dados_agregados": chain_agregador} | chain_padroes

chain_gera_relatorio = (
    {"padroes": chain_analise_basica} 
    | RunnablePassthrough() 
    | {"dados_completos": chain_tendencias, "padroes": itemgetter("padroes")} 
    | RunnablePassthrough() 
    | {"insights": chain_insights, "dados_completos": itemgetter("dados_completos")}
    | {"recomendacoes": chain_recomendacoes, "insights": itemgetter("insights"), "dados_completos": itemgetter("dados_completos")}
    | chain_relatorio
)